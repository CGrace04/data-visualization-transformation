{
  "hash": "017f4d456054e45625bf2da3d665e52d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Flights and pipes\"\n---\n\n\n\n# Introduction\n\nHave you ever had a flight delayed?\nHow common is that?\nWhich airlines are delayed more than others?\n\n## Packages\n\nWe will use the **tidyverse** packages for data wrangling and visualization and the **nycflights13** package for the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(nycflights13)\n```\n:::\n\n\n\n## Data\n\nThe dataset we will explore is called `flights`.\nLet's `glimpse()` at it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(flights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 336,776\nColumns: 19\n$ year           <int> 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ month          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ day            <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dep_time       <int> 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, …\n$ sched_dep_time <int> 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, …\n$ dep_delay      <dbl> 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1…\n$ arr_time       <int> 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,…\n$ sched_arr_time <int> 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,…\n$ arr_delay      <dbl> 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1…\n$ carrier        <chr> \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"…\n$ flight         <int> 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4…\n$ tailnum        <chr> \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N394…\n$ origin         <chr> \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\",…\n$ dest           <chr> \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\",…\n$ air_time       <dbl> 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1…\n$ distance       <dbl> 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, …\n$ hour           <dbl> 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6…\n$ minute         <dbl> 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0…\n$ time_hour      <dttm> 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0…\n```\n\n\n:::\n:::\n\n\n\n# Exploring flights\n\n## Exercise 1\n\nFill in the blanks:\n\nThe `flights` data frame has \\_\\_\\_ rows.\nEach row represents a \\_\\_\\_.\n\n## Exercise 2\n\nWhat are the names of the variables in `flights`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 3 - `select()`\n\n-   Make a data frame that only contains the variables `dep_delay` and `arr_delay`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Make a data frame that keeps every variable except `dep_delay`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Make a data frame that includes all variables between `year` through `dep_delay` (inclusive). These are all variables that provide information about the departure of each flight.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Use the `select` helper `contains()` to make a data frame that includes the variables associated with the arrival, i.e., contains the string `\"arr_\"` in the name.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 4 - `slice()`\n\n-   Display the first five rows of the `flights` data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Display the last two rows of the `flights` data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 5 - `arrange()`\n\n-   Let's arrange the data by departure delay, so the flights with the shortest departure delays will be at the top of the data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   What does it mean for the `dep_delay` to have a negative value?\n\nAdd your response here.\n\n-   Arrange the data by descending departure delay, so the flights with the longest departure delays will be at the top.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Create a data frame that only includes the plane tail number (`tailnum`), carrier (`carrier`), and departure delay for the flight with the longest departure delay. What is the plane tail number (`tailnum`) for this flight?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 6 - `filter()`\n\n-   Filter for all rows where the destination airport is RDU.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Filter for all rows where the destination airport is RDU and the arrival delay is less than 0.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Describe what the code is doing in words.\n\nAdd response here.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights |>\n  filter(\n    dest %in% c(\"RDU\", \"GSO\"),\n    arr_delay < 0 | dep_delay < 0\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6,203 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1317           1325        -8     1454           1505\n 9  2013     1     1     1449           1450        -1     1651           1640\n10  2013     1     1     1505           1510        -5     1654           1655\n# ℹ 6,193 more rows\n# ℹ 11 more variables: arr_delay <dbl>, carrier <chr>, flight <int>,\n#   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n**Hint:** Logical operators in R:\n\n| operator      | definition                                               |\n|:--------------|:---------------------------------------------------------|\n| `<`           | is less than?                                            |\n| `<=`          | is less than or equal to?                                |\n| `>`           | is greater than?                                         |\n| `>=`          | is greater than or equal to?                             |\n| `==`          | is exactly equal to?                                     |\n| `!=`          | is not equal to?                                         |\n| `x & y`       | is x AND y?                                              |\n| `x | y`       | is x OR y?                                               |\n| `is.na(x)`    | is x NA?                                                 |\n| `!is.na(x)`   | is x not NA?                                             |\n| `x %in% y`    | is x in y?                                               |\n| `!(x %in% y)` | is x not in y?                                           |\n| `!x`          | is not x? (only makes sense if `x` is `TRUE` or `FALSE`) |\n\n## Exercise 7 - `count()`\n\n-   Create a frequency table of the destination locations for flights from New York.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   In which month was there the fewest number of flights? How many flights were there in that month?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   On which date (month + day) was there the largest number of flights? How many flights were there on that day?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 8 - `mutate()`\n\n-   Convert `air_time` (minutes in the air) to hours and then create a new variable, `mph`, the miles per hour of the flight.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   First, count the number of flights each month, and then calculate the proportion of flights in each month. What proportion of flights take place in July?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Create a new variable, `rdu_bound`, which indicates whether the flight is to RDU or not. Then, for each departure airport (`origin`), calculate what proportion of flights originating from that airport are to RDU.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 9 - `summarize()`\n\n-   Find mean arrival delay for all flights.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 10 - `group_by()`\n\n-   Find mean arrival delay for for each month.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   What is the median departure delay for each airports around NYC (`origin`)? Which airport has the shortest median departure delay?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}