{
  "hash": "0a24978663c834c6bb58974be43c18e6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Bechdel + data visualization\"\norder: 2\nwebr:\n  packages: ['tidyverse', 'scales']\n---\n\n\n\n\n::: callout-important\nPlease reference the `Meet the toolkit: Programming exercises` for information and instructions on how to interact with the programming exercise below.\n:::\n\n## Getting started\n\nPlease run the following code by clicking the [green arrow]{style=\"color:green;\"} just above the code chunk.\nWhen reading in the data, nothing will appear after you click the button.\nHowever, clicking the arrow ensures that your data can be used for the following programming exercise.\n\n```{webr-r}\n#| context: setup\ndownload.file(\n  \"https://raw.githubusercontent.com/ElijahMeyer3/Coursera/main/data/bechdel.csv\",\n  \"bechdel.csv\"\n)\n\noptions(readr.show_progress = FALSE)\n```\n\n\n```{webr-r}\n#| echo: false\nbechdel <- read_csv(\"bechdel.csv\")\n```\n\n\n::: {.cell}\n\n:::\n\n\nNote: Reading in a tibble also gives you information about the data, such as the column names (e.g., tite), and the variable type (e.g., chr). This is often suppressed after the initial read in by adding `show_col_types = FALSE` within the `read_csv()` function after the path to the data, separated by a comma. \n\nIn this mini analysis we work with the data used in the FiveThirtyEight story titled [\"The Dollar-And-Cents Case Against Hollywood's Exclusion of Women\"](https://fivethirtyeight.com/features/the-dollar-and-cents-case-against-hollywoods-exclusion-of-women/).\n\nThis analysis is about the [Bechdel test](https://en.wikipedia.org/wiki/Bechdel_test), a measure of the representation of women in fiction.\n\n### Packages\n\nWe'll use: **tidyverse** for the majority of the analysis and **scales** for pretty plot labels later on.\nThese are ready for you to use in this programming exercise!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\n```\n:::\n\n\n::: callout-note\nThis a modified version of the `bechdel` dataset.\nIt's been modified to include some new variables derived from existing variables as well as to limit the scope of the data to movies released between 1990 and 2013.\nA link to the original dataset can be found [here](https://github.com/fivethirtyeight/data/blob/master/bechdel/movies.csv)\n:::\n\n### Get to know the data\n\nWe can use the `glimpse()` function to get an overview (or \"glimpse\") of the data.\nWrite the following code below to accomplish this task.\n\nWith your output, confirm that:\n\n-   There are 1615 rows\n\n-   There are 7 variables (columns) in the dataset\n\n::: callout-warning\nIf you receive the error [Error: object 'bechdel' not found]{style=\"color:red;\"}, go back and read in your data above with `read_csv()`.\n:::\n\n```{webr-r}\n# add code here\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(bechdel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,615\nColumns: 7\n$ title       <chr> \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42…\n$ year        <dbl> 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013…\n$ gross_2013  <dbl> 67878146, 55078343, 211714070, 208105475, 190040426, 18416…\n$ budget_2013 <dbl> 13000000, 45658735, 20000000, 61000000, 40000000, 22500000…\n$ roi         <dbl> 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851…\n$ binary      <chr> \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P…\n$ clean_test  <chr> \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"…\n```\n\n\n:::\n:::\n\n:::\n\nWe can use `slice()` to look at rows of our data.\nRun the following code.\nChange the `5` to another number to print that many rows!\n\n```{webr-r}\nslice(bechdel, 1:5)\n```\n\nWhat does each observation (row) in the data set represent?\n\n<br>\n\n\n```{=html}\n<textarea rows=\"4\" cols=\"50\">\n</textarea>\n```\n\n<br><br>\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\nEach observation represents a **movie**.\n:::\n\n## Variables of interest\n\nThe variables we'll focus on are the following:\n\n-   `budget_2013`: Budget in 2013 inflation adjusted dollars.\n-   `gross_2013`: Gross (US and international combined) in 2013 inflation adjusted dollars.\n-   `roi`: Return on investment, calculated as the ratio of the gross to budget.\n-   `clean_test`: Bechdel test result:\n    -   `ok` = passes test\n    -   `dubious`\n    -   `men` = women only talk about men\n    -   `notalk` = women don't talk to each other\n    -   `nowomen` = fewer than two women\n-   `binary`: Bechdel Test PASS vs FAIL binary\n\nThere are a few other variables in the dataset, but we won't be using them in this analysis.\n\n## Visualizing data with `ggplot2`\n\n**ggplot2** is the package and `ggplot()` is the function in this package that is used to create a plot.\nInteract with the code below by either running the code given, or adding code to achieve the expected solution when asked within the code chunk!\n\n-   `ggplot()` creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with `data = bechdel`, and run the following to create our base.\n\n```{webr-r}\n#| label: plot-base\nggplot(data = bechdel)\n```\n\n-   The `mapping` argument is paired with an aesthetic (`aes()`), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n```{webr-r}\n#| label: plot-aesthetic-mapping\nggplot(\n  data = bechdel,\n  mapping = aes(x = budget_2013, y = gross_2013)\n)\n```\n\n-   As we previously mentioned, we often omit the names of the first two arguments in R functions. So you'll often see this written as:\n\n```{webr-r}\n#| label: plot-simplified-call\nggplot(\n  bechdel,\n  aes(x = budget_2013, y = gross_2013)\n)\n```\n\nNote that the result is exactly the same.\n\nThe `geom_*()` function specifies the type of plot we want to use to represent the data.\nIn the code below, we want to use `geom_point()`, which creates a plot where each observation is represented by a point.\n\n```{webr-r}\n#| label: plot-point\nggplot(\n  bechdel,\n  aes(x = budget_2013, y = gross_2013)\n) +\n  #add code here\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  bechdel,\n  aes(x = budget_2013, y = gross_2013)\n) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](bechdel-data-visualization_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n:::\n\nNote that this results in a warning as well.\n\nThis warning represents the number of observations that were removed because there were missing data!\n\n## Gross revenue vs. budget\n\n### Step 1\n\nThe following code changes the color of all points to coral.\nExplore different colors by changing \"coral\" to different colors!\n\n::: callout-tip\nSee <http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf> for many color options you can use by name in R or use the [hex code](https://en.wikipedia.org/wiki/Web_colors) for a color of your choice.\n:::\n\n```{webr-r}\n#| label: plot-point-color\nggplot(\n  bechdel,\n  aes(x = budget_2013, y = gross_2013)\n) +\n  geom_point(color = \"coral\")\n```\n\n### Step 2\n\nAdd labels for the title and x and y axes using [labs()](https://ggplot2.tidyverse.org/reference/labs.html).\nDo this by modifying the existing code below.\n\n```{webr-r}\n#| label: plot-labs\nggplot(\n  bechdel,\n  aes(x = budget_2013, y = gross_2013)\n) +\n  geom_point(color = \"coral\") + \n  #add code here\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  bechdel,\n  aes(x = budget_2013, y = gross_2013)\n) +\n  geom_point(color = \"deepskyblue3\") +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](bechdel-data-visualization_files/figure-html/plot-labels-1.png){width=672}\n:::\n:::\n\n:::\n\n### Step 3\n\nAn `aes`thetic is a visual property of one of the objects in your plot.\nCommonly used aesthetic options are:\n\n-   color\n-   fill\n-   shape\n-   size\n-   alpha (transparency)\n\nModify the plot below so the `color` of the points is based on the variable `binary`, and make the size of your points based on `roi`.\n\n```{webr-r}\n#| label: plot-aes-color\nggplot(\n  bechdel,\n  aes(x = budget_2013, y = gross_2013)\n) +\n  geom_point() +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n  )\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  bechdel,\n  aes(\n    x = budget_2013, y = gross_2013,\n    color = binary, size = roi\n  )\n) +\n  geom_point() +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](bechdel-data-visualization_files/figure-html/plot-aes-color-solution-1.png){width=672}\n:::\n:::\n\n:::\n\n### Step 4\n\n`alpha` is used within `geom_point()` to change the transparency of the dots.\n`alpha` ranges between 0 and 1, with lower values being more transparent dots.\nBelow, make the dots more transparent.\n\n```{webr-r}\n#| label: plot-aes-alpha\nggplot(\n  bechdel,\n  aes(\n    x = budget_2013, y = gross_2013,\n    color = binary, size = roi\n  )\n) +\n  geom_point(alpha = 1) +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n  )\n```\n\n### Step 5\n\nExpand on your plot from the previous step by using [facet_wrap()](https://ggplot2.tidyverse.org/reference/facet_wrap.html) to display the association between `budget` and `gross` for different values of `clean_test`.\n\n```{webr-r}\n#| label: plot-facet-wrap\nggplot(\n  bechdel,\n  aes(\n    x = budget_2013, y = gross_2013,\n    color = binary, size = roi\n  )\n) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(~#insert variable name) +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n  )\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  bechdel,\n  aes(\n    x = budget_2013, y = gross_2013,\n    color = binary, size = roi\n  )\n) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(~clean_test) +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](bechdel-data-visualization_files/figure-html/plot-facet-wrap-sol-1.png){width=672}\n:::\n:::\n\n:::\n\n### Step 6\n\nBelow is a demonstration on how to improve your plot from the previous step by making the x and y scales more legible.\n\n::: callout-tip\nThis is done through the use of the [**scales**](https://scales.r-lib.org/) package, specifically the [scale_x_continuous()](https://ggplot2.tidyverse.org/reference/scale_continuous.html) and [scale_y_continuous()](https://ggplot2.tidyverse.org/reference/scale_continuous.html) functions.\n:::\n\n```{webr-r}\n#| label: plot-scales\nggplot(\n  bechdel,\n  aes(\n    x = budget_2013, y = gross_2013,\n    color = binary, size = roi\n  )\n) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(~clean_test) +\n  scale_x_continuous(labels = label_dollar(scale = 1 / 1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1 / 1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n  )\n```\n\n### Step 7\n\nExpand on your plot from the previous step by using [facet_grid()](https://ggplot2.tidyverse.org/reference/facet_grid.html) to display the association between `budget` and `gross` for different combinations of `clean_test` and `binary`.\n\n```{webr-r}\n#| label: plot-facet-grid\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_grid(#insert variable name1 ~ insert variable name2) +\n  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n```\n\nIs this type of facet useful?\nWhy or why not?\n\n<br>\n\n\n```{=html}\n<textarea rows=\"4\" cols=\"50\">\n</textarea>\n```\n\n<br><br>\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  bechdel,\n  aes(\n    x = budget_2013, y = gross_2013,\n    color = binary, size = roi\n  )\n) +\n  geom_point(alpha = 0.5) +\n  facet_grid(clean_test ~ binary) +\n  scale_x_continuous(labels = label_dollar(scale = 1 / 1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1 / 1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\",\n    y = \"Gross revenue (in 2013 $)\",\n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](bechdel-data-visualization_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThis was not a useful update as one of the levels of `clean_test` maps directly to one of the levels of `binary`.\n:::\n\n## Reflection questions\n\n-   Why do you believe we are studying the content above?\n\n<br>\n\n```{=html}\n<textarea rows=\"8\" cols=\"50\">\n</textarea>\n```\n<br><br>\n\n-   List three topics that you feel very confident about from the content above.\n\n<br>\n\n```{=html}\n<textarea rows=\"8\" cols=\"50\">\n</textarea>\n```\n<br><br>\n\n-   List three topics that you feel could use more practice (or you are more curious about) from the content above.\n\n<br>\n\n```{=html}\n<textarea rows=\"8\" cols=\"50\">\n</textarea>\n```\n<br><br>\n\n",
    "supporting": [
      "bechdel-data-visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}