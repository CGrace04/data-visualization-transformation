{
  "hash": "f284883562e4ab3651b84241d30e72a6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mario games + data visualization\"\norder: 3\nwebr:\n  packages: ['tidyverse' , 'scales' , 'ggridges' , 'ggExtra']\n---\n\n\n\n\n::: callout-important\nPlease reference the `webR-intro` programming exercise for information and instructions on how to interact with the programming exercise below.\n:::\n\n## Getting started\n\nPlease run the following code by clicking the [green arrow]{style=\"color:green;\"} just above the code chunk.\nWhen reading in the data, nothing will appear after you click the button.\nHowever, clicking the arrow ensures that your data are read in and can be used for the following programming exercise.\n\n```{webr-r}\n#| context: setup\ndownload.file(\n  \"https://raw.githubusercontent.com/ElijahMeyer3/Coursera/main/data/mariokart.csv\",\n  \"mariokart.csv\"\n)\n\noptions(readr.show_progress = FALSE)\n```\n\n```{webr-r}\n#| echo: false\nmario <- read_csv(\"mariokart.csv\")\n```\n\n\n::: {.cell}\n\n:::\n\n\nIn this mini analysis we work with the data from the **openintro** package in R.\nThese data are auction data from Ebay for the game Mario Kart for the Nintendo Wii, collected in October 2009.\nA key to these data can be found below:\n\n|               |                                                                                                                                                    |\n|------------------|------------------------------------------------------|\n| variable name | description                                                                                                                                        |\n| id            | Auction ID assigned by Ebay.                                                                                                                       |\n| duration      | Auction length, in days                                                                                                                            |\n| n_bids        | Number of bids                                                                                                                                     |\n| cond          | Game condition, either new or used                                                                                                                 |\n| start_pr      | Start price of the auction                                                                                                                         |\n| ship_pr       | Shipping price                                                                                                                                     |\n| total_pr      | Total price, which equals the auction price plus the shipping price                                                                                |\n| ship_sp       | Shipping speed or method                                                                                                                           |\n| seller_rate   | The seller's rating on Ebay. This is the number of positive ratings minus the number of negative ratings for the seller                            |\n| stock_photo   | Whether the auction feature photo was a stock photo or not, either yes or no                                                                       |\n| wheels        | Number of Wii wheels included in the auction. These are steering wheel attachments to make it seem as though you are actually driving in the game. |\n| title         | The title of the auctions                                                                                                                          |\n\n### Packages\n\nWe'll use **tidyverse** for the majority of the analysis and **scales** for pretty plot labels later on.\n**ggridges** allows us to make ridge plots, and **gridExtra** allows to arrange plots next to each other.\nThese are ready to use for you in this programming exercise!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggridges)\nlibrary(gridExtra)\n```\n:::\n\n\n\n### Get to know the data\n\nWe can use `glimpse()` to get an overview (or \"glimpse\") of the data.\nWrite the following code below to accomplish this task.\n\nWith your output, confirm that:\n\n-   There are 143 rows\n\n-   There are 12 variables (columns) in the dataset\n\n::: callout-warning\nIf you receive the error [Error: object 'mario' not found]{style=\"color:red;\"}, go back and read in your data above.\n:::\n\n```{webr-r}\n# add code here\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mario)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 143\nColumns: 12\n$ id          <dbl> 150377422259, 260483376854, 320432342985, 280405224677, 17…\n$ duration    <dbl> 3, 7, 3, 3, 1, 3, 1, 1, 3, 7, 1, 1, 1, 1, 7, 7, 3, 3, 1, 7…\n$ n_bids      <dbl> 20, 13, 16, 18, 20, 19, 13, 15, 29, 8, 15, 15, 13, 16, 6, …\n$ cond        <chr> \"new\", \"used\", \"new\", \"new\", \"new\", \"new\", \"used\", \"new\", …\n$ start_pr    <dbl> 0.99, 0.99, 0.99, 0.99, 0.01, 0.99, 0.01, 1.00, 0.99, 19.9…\n$ ship_pr     <dbl> 4.00, 3.99, 3.50, 0.00, 0.00, 4.00, 0.00, 2.99, 4.00, 4.00…\n$ total_pr    <dbl> 51.55, 37.04, 45.50, 44.00, 71.00, 45.00, 37.02, 53.99, 47…\n$ ship_sp     <chr> \"standard\", \"firstClass\", \"firstClass\", \"standard\", \"media…\n$ seller_rate <dbl> 1580, 365, 998, 7, 820, 270144, 7284, 4858, 27, 201, 4858,…\n$ stock_photo <chr> \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"ye…\n$ wheels      <dbl> 1, 1, 1, 1, 2, 0, 0, 2, 1, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2…\n$ title       <chr> \"~~ Wii MARIO KART &amp; WHEEL ~ NINTENDO Wii ~ BRAND NEW …\n```\n\n\n:::\n:::\n\n:::\n\n## Variables of interest\n\nThe variables we'll focus on are the following:\n\n-   `total_pr`: total price of game sold plus shipping in USD\n-   `ship_sp`: Shipping speed or method\n    -   `firstClass`\n    -   `media`\n    -   `other`\n    -   `parcel`\n    -   `priority`\n    -   `standard`\n    -   `ups3Day`\n    -   `upsGround`\n-   `cond`: Binary variable representing the condition of the video game\n    -   `new`\n    -   `used`\n\n## Visualizing categorical data with `ggplot2`\n\nFirst, let's explore the variable `cond`.\nSpecifically, let's investigate how many `new` games were sold versus how many `used` games were sold by creating a barplot.\nAdd the following correct `geom_*()` to make a barplot of `cond` below.\n\n```{webr-r}\n  ggplot(\n    mario,\n    aes(x = cond)\n  ) + \n  # add code here\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(\n    mario,\n    aes(x = cond)\n  ) +\n    geom_bar()\n```\n\n::: {.cell-output-display}\n![](mario-data-visualization_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n:::\n\nNext, let's fill in the bars by the shipping method each game was shipped with `ship_sp`.\n\n```{webr-r}\n  ggplot(\n    mario,\n    aes(x = cond, fill = # add code here)) +\n    geom_bar()\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(\n    mario,\n    aes(x = cond, fill = ship_sp)\n  ) +\n    geom_bar()\n```\n\n::: {.cell-output-display}\n![](mario-data-visualization_files/figure-html/plot-fill-solution-1.png){width=672}\n:::\n:::\n\n:::\n\nThe code above uses `fill` to color the segments of the boxplot by another categorical variable.\nBelow, we change `fill` to `color`.\nWhat happens?\nWhy?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(\n    mario,\n    aes(x = cond, color = ship_sp)\n  ) +\n    geom_bar()\n```\n\n::: {.cell-output-display}\n![](mario-data-visualization_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n<br>\n\n\n```{=html}\n<textarea rows=\"4\" cols=\"50\">\n</textarea>\n```\n\n<br><br>\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n`fill` defines the color in which the `geom` is filled in with, while color defines the color in which the `geom` is outlined.\nA special exception to this is with scatterplots, where the dots are not treated as shapes to be filled in, and instead are filled in by color.\n:::\n\n## Count vs Proportion\n\nUp to this point, our bar plot has counted up the number of observations for each condition of game, and has been segmented by the count of shipping method.\nPerhaps it is easier to compare shipping method across condition of game if we looked at the proportion of shipping method within each game.\nThis can be achieved using `position = \"fill\"` in the `geom_xx()` statement.\nAlter the code below so that it includes `position = fill`, and comment on the relationship between condition and shipping method.\n\n```{webr-r}\n  ggplot(\n    mario,\n    aes(x = cond, fill = ship_sp)\n  ) +\n    geom_bar(position = #add code here)\n```\n\n<br>\n\n\n```{=html}\n<textarea rows=\"4\" cols=\"50\">\n</textarea>\n```\n\n<br><br>\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(\n    mario,\n    aes(x = cond, fill = ship_sp)\n  ) +\n    geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](mario-data-visualization_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nIt appears that new Mario games were mainly shipped using upsGround, while used Mario games were shipped using standard shipping.\n:::\n\n## Relationships between numerical and categorical variables\n\nUp to this point, we have been visualizing the relationship between categorical variables.\nWhat if we wanted to look at the relationships between different types of variables?\n\n### Boxplots\n\nOne way we can investigate the relationship between different types of variables is to create a boxplot.\nBelow, we are going to create a boxplot using `geom_boxplot()` between the variables `cond` and `total_pr`.\nWhat information can we gather from the boxplots?\n\n```{webr-r}\n  ggplot(\n    mario,\n    aes(x = cond, y = total_pr)\n  ) + \n   #add code here\n```\n\n<br>\n\n\n```{=html}\n<textarea rows=\"4\" cols=\"50\">\n</textarea>\n```\n\n<br><br>\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(\n    mario,\n    aes(x = cond, y = total_pr)\n  ) +\n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](mario-data-visualization_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nWe can infer that the median total price for new Mario games is higher for the new condition versus the used condition.\nThere appears to be one outlier in new condition, and four outliers in the used condition.\nThe IQR of the new condition is slightly larger than the used condition.\n:::\n\n### Violin plot\n\nA violin plot is a lot like a box plot, but also shows us information about the density of the quantitative variable.\nBelow, we have a violin plot that again shows the relationship between the condition (`cond`) of the Mario game, and the total price (`total_pr`) of the game (cost + shipping).\nDescribe the relationship below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(\n    mario,\n    aes(x = cond, y = total_pr)\n  ) +\n    geom_violin()\n```\n\n::: {.cell-output-display}\n![](mario-data-visualization_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n<br>\n\n\n```{=html}\n<textarea rows=\"4\" cols=\"50\">\n</textarea>\n```\n\n<br><br>\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\nIt appears that there is a higher density of new games at a higher price than used games.\nUsed games appear to have two potential outliers higher than any new game.\n:::\n\n### Ridge plots\n\nRidge plots, similar to violin plots, shows the distribution of a numeric variable across the levels of a categorical variable.\nIn order to make this plot, we will use `geom_density_ridges()`.\nAdd this geom to the following code below to make the ridge plots.\nWithin this geom, set alpha equal to 0.5.\n\n```{webr-r}\n  ggplot(\n    mario,\n    aes(x = total_pr, y = cond, fill = cond, color = cond)\n  ) + \n   #add code here\n```\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(\n    mario,\n    aes(x = total_pr, y = cond, fill = cond, color = cond)\n  ) +\n    geom_density_ridges(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPicking joint bandwidth of 2.68\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](mario-data-visualization_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n:::\n\n## Working with `dplyr`\n\n[`dplyr`](https://dplyr.tidyverse.org/) is a grammar of data manipulation that helps you work with data.\nWe are going to explore the following dplyr verbs on the `mario` data set:\n\n-   `select()`\n-   `filter()`\n-   `group_by()` and `summarize()`\n\nIn this demonstration, we are going to explore if there is a difference in mean total price for a used game, if the game was sold with or without the stock photo.\nLet's assume that we are only interested in new games.\n\n### `select()`\n\nFirst, let's use select to only select the columns of the data set we are interested in: `total_pr`, `cond`, and `stock_photo`.\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# add code here\n```\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmario |>\n  select(total_pr, cond, stock_photo)\n```\n:::\n\n\nNote, you could also reference the column by position, or subtract out the other columns using either names or position.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmario |>\n  select(4,7,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 143 × 3\n   cond  total_pr stock_photo\n   <chr>    <dbl> <chr>      \n 1 new       51.6 yes        \n 2 used      37.0 yes        \n 3 new       45.5 no         \n 4 new       44   yes        \n 5 new       71   yes        \n 6 new       45   yes        \n 7 used      37.0 yes        \n 8 new       54.0 yes        \n 9 used      47   yes        \n10 used      50   no         \n# ℹ 133 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nmario |>\n  select(-c(1:3,5:6,8:9,11:12))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 143 × 3\n   cond  total_pr stock_photo\n   <chr>    <dbl> <chr>      \n 1 new       51.6 yes        \n 2 used      37.0 yes        \n 3 new       45.5 no         \n 4 new       44   yes        \n 5 new       71   yes        \n 6 new       45   yes        \n 7 used      37.0 yes        \n 8 new       54.0 yes        \n 9 used      47   yes        \n10 used      50   no         \n# ℹ 133 more rows\n```\n\n\n:::\n:::\n\n:::\n\n### `filter()`\n\nThe function `filter()` acts on the rows of the data set, and subsets the data set based on a condition.\nLet's add on to our code and use the `filter()` function to subset the data to only look at used games.\n\n\n::: {.cell}\n\n```{.webr .cell-code}\nmario |>\n  select(total_pr, cond, stock_photo) |>\n  # add code here\n```\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmario |>\n  select(total_pr, cond, stock_photo) |>\n  filter(cond == \"used\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 84 × 3\n   total_pr cond  stock_photo\n      <dbl> <chr> <chr>      \n 1     37.0 used  yes        \n 2     37.0 used  yes        \n 3     47   used  yes        \n 4     50   used  no         \n 5     43.3 used  yes        \n 6     46   used  yes        \n 7    327.  used  no         \n 8     31   used  yes        \n 9     46.5 used  yes        \n10     34.5 used  yes        \n# ℹ 74 more rows\n```\n\n\n:::\n:::\n\n:::\n\n### `group_by()` and `summarize()`\n\nNow that we have a subset of our data set that is relavent to our question of interest, we can calcualte the mean total price using `group_by()` and `summarize()`.\nNote that `group_by()` groups our data frame together by the specified variable so that we can calculate summary statistics (like the mean), at the group level instead of for the entire data frame using `summarize()`.\nReport which mean is higher.\nIs this the result you expected?\nWhy or why not?\n\n\n::: {.cell}\n\n```{.webr .cell-code}\nmario |>\n  select(total_pr, cond, stock_photo) |>\n  filter(cond == \"used\") |>\n  # add code here\n```\n:::\n\n\n<br>\n\n\n```{=html}\n<textarea rows=\"4\" cols=\"50\">\n</textarea>\n```\n\n<br><br>\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmario |>\n  select(total_pr, cond, stock_photo) |>\n  filter(cond == \"used\") |>\n  group_by(stock_photo) |>\n  summarize(mean_pr = mean(total_pr))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  stock_photo mean_pr\n  <chr>         <dbl>\n1 no             54.8\n2 yes            42.0\n```\n\n\n:::\n:::\n\n\nThe mean total price is higher for a game that did not include a stock photo versus games that did.\nThis is not what I expected, and would have expected that including a stock photo would have increased the price.\nThis may be due to other variables in the data set not being accounted for in our calculations.\n:::\n\n### Extension: `mutate()`\n\nThe total price reported in our data set is in US dollars (USD).\nAt the time of writing this exercise, the US exchange rate to Canadian currency (CAD) is 1.37.\nSuppose we wanted to answer the same question as above, but in CAD instead of USD.\nWe can use `mutate()`to create a new `cad_total_pr` column before taking the mean `cad_total_pr` by stock photo.\nRecreate your table above, but in CAD.\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# add code here\n```\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmario |>\n  select(total_pr, cond, stock_photo) |>\n  mutate(cad_total_pr = total_pr * 1.37) |>\n  filter(cond == \"used\") |>\n  group_by(stock_photo) |>\n  summarize(mean_pr_cad = mean(cad_total_pr))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  stock_photo mean_pr_cad\n  <chr>             <dbl>\n1 no                 75.0\n2 yes                57.5\n```\n\n\n:::\n:::\n\n:::\n\n## Reflection questions\n\n-   Why do you believe we are studying the content above?\n\n<br>\n\n```{=html}\n<textarea rows=\"8\" cols=\"50\">\n</textarea>\n```\n<br><br>\n\n-   List three topics that you feel very confident about from the content above.\n\n<br>\n\n```{=html}\n<textarea rows=\"8\" cols=\"50\">\n</textarea>\n```\n<br><br>\n\n-   List three topics that you feel could use more practice (or you are more curious about) from the content above.\n\n<br>\n\n```{=html}\n<textarea rows=\"8\" cols=\"50\">\n</textarea>\n```\n<br><br>\n\n",
    "supporting": [
      "mario-data-visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}