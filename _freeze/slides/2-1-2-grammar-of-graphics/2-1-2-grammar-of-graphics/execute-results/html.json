{
  "hash": "f0ffd6eb8f6ad5905dafdbc9a934b5a1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grammar of graphics\"\nformat: revealjs\n---\n\n\n\n\n\n# ggplot2 ‚ù§Ô∏è üêß {.section-break}\n\n## Data: Palmer Penguins\n\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex.\n\n![](images/penguins.png){fig-align=\"center\" width=\"500\"}\n\n## Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, ‚Ä¶\n$ island            <fct> Torgersen, Torgersen, Torgersen,‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6‚Ä¶\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181‚Ä¶\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650‚Ä¶\n$ sex               <fct> male, female, female, NA, female‚Ä¶\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 20‚Ä¶\n```\n\n\n:::\n:::\n\n\n\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm, y = bill_length_mm,\n    color = species\n  )\n) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    color = \"Species\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n:::\n\n\n\n# Coding out loud {.section-break}\n\n## Step 1\n\n**Start with the `penguins` data frame**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-5-1.png){width=576}\n:::\n:::\n\n\n\n## Step 2\n\nStart with the `penguins` data frame, **map bill depth to the x-axis**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm)\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-6-1.png){width=576}\n:::\n:::\n\n\n\n## Step 3\n\nStart with the `penguins` data frame, map bill depth to the x-axis **and map bill length to the y-axis.**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-7-1.png){width=576}\n:::\n:::\n\n\n\n## Step 4\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n**Represent each observation with a point**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-8-1.png){width=576}\n:::\n:::\n\n\n\n## Step 5\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point **and map species to the color of each point.**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-9-1.png){width=576}\n:::\n:::\n\n\n\n## Step 6\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\n**Title the plot \"Bill depth and length\"**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  labs(\n    title = \"Bill depth and length\"\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-10-1.png){width=576}\n:::\n:::\n\n\n\n## Step 7\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot \"Bill depth and length\", **add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-11-1.png){width=576}\n:::\n:::\n\n\n\n## Step 8\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", **label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-12-1.png){width=576}\n:::\n:::\n\n\n\n## Step 9\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, **label the legend \"Species\"**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    color = \"Species\"\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-13-1.png){width=576}\n:::\n:::\n\n\n\n## Step 10\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", **and add a caption for the data source.**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  )\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-14-1.png){width=576}\n:::\n:::\n\n\n\n## Step 11\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", and add a caption for the data source.\n**Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.**\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/step-11-1.png){width=576}\n:::\n:::\n\n\n\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-16-1.png){width=576}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()\n```\n:::\n\n\n\n## Narrative\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n\nRepresent each observation with a point and map species to the color of each point.\n\nTitle the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", and add a caption for the data source.\n\nFinally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n\n## Argument names\n\nYou can omit the names of first two arguments when building plots with `ggplot()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm,\n           y = bill_length_mm,\n           color = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n:::\n\n\n\n# Aesthetics {.section-break}\n\n## Aesthetics options\n\nCommonly used characteristics of plotting characters that can be **mapped to a specific variable** in the data are\n\n-   `color`\n-   `shape`\n-   `size`\n-   `alpha` (transparency)\n\n## color\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-20-1.png){width=576}\n:::\n:::\n\n\n\n## Shape\n\nMapped to a different variable than `color`\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = island)) + #<<\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-21-1.png){width=576}\n:::\n:::\n\n\n\n## Shape\n\nMapped to same variable as `color`\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-22-1.png){width=576}\n:::\n:::\n\n\n\n## Size\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species,\n           size = body_mass_g)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-23-1.png){width=576}\n:::\n:::\n\n\n\n## Alpha\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species,\n           size = body_mass_g,\n           alpha = flipper_length_mm)) + #<<\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-24-1.png){width=576}\n:::\n:::\n\n\n\n## Mapping vs. setting\n\n::: columns\n::: {.column width=\"50%\"}\n**Mapping:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm,\n           y = bill_length_mm,\n           size = body_mass_g, #<<\n           alpha = flipper_length_mm)) + #<<\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-25-1.png){width=576}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n**Setting:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm,\n           y = bill_length_mm)) + \n  geom_point(size = 2, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-26-1.png){width=100%}\n:::\n:::\n\n\n:::\n:::\n\n## Mapping vs. setting\n\n-   **Mapping:** Determine the size, alpha, etc. of points based on the values of a variable in the data\n    -   goes into `aes()`\n-   **Setting:** Determine the size, alpha, etc. of points **not** based on the values of a variable in the data\n    -   goes into `geom_*()` (this was `geom_point()` in the previous example, but we'll learn about other geoms soon!)\n\nclass: middle\n\n# Faceting\n\n## Faceting\n\n-   Smaller plots that display different subsets of the data\n-   Useful for exploring conditional relationships and large data\n\n.panelset\\[ .panel\\[.panel-name[Plot]\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-27-1.png){width=70%}\n:::\n:::\n\n\n\n.panel\\[.panel-name[Code]\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(species ~ island) #<<\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values\n(`geom_point()`).\n```\n\n\n:::\n:::\n\n\n\n## Various ways to facet\n\n.question\\[ In the next few slides describe what each plot displays.\nThink about how the code relates to the output.\n\n**Note:** The plots in the next few slides do not have proper titles, axis labels, etc. because we want you to figure out what's happening in the plots.\nBut you should always label your plots!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(species ~ sex) #<<\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-28-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(sex ~ species) #<<\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-29-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species) #<<\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-30-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(. ~ species) #<<\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-31-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species, ncol = 2) #<<\n```\n\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-32-1.png){width=576}\n:::\n:::\n\n\n\n## Faceting summary\n\n-   `facet_grid()`:\n    -   2d grid\n    -   `rows ~ cols`\n    -   use `.` for no split\n-   `facet_wrap()`: 1d ribbon wrapped according to number of rows and columns specified or available plotting area\n\n## Facet and color\n\n.pull-left-narrow\\[\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, \n      y = bill_length_mm, \n      color = species)) + #<<\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d() #<<\n```\n:::\n\n\n\n.pull-right-wide\\[\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-33-1.png){width=100%}\n:::\n:::\n\n\n\n## Face and color, no legend\n\n.pull-left-narrow\\[\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, \n      y = bill_length_mm, \n      color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d() +\n  guides(color = \"none\") #<<\n```\n:::\n\n\n\n.pull-right-wide\\[\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-1-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-34-1.png){width=100%}\n:::\n:::\n\n\n\n# Summary\n\n## Summary\n\nStructure of the code for plots can be summarized as\n\n``` r\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], \n                     y = [y-variable])) +\n   geom_xxx() +\n   other options\n```\n",
    "supporting": [
      "2-1-2-grammar-of-graphics_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}