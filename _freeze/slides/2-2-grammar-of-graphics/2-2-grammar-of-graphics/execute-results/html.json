{
  "hash": "2211fb248eb88f2173f817facadfd07e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grammar of graphics\"\nformat: \n  revealjs:\n    auto-stretch: true\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n# Grammar of graphics {.section-break}\n\n## Grammar of Graphics\n\n::: columns\n::: {.column width=\"40%\"}\n-   The grammar of graphics is a tool that enables us to concisely describe the components of a graphic\n-   The **ggplot2** package, which is part of **tidyverse**, implements the grammar of graphics in R\n:::\n\n::: {.column width=\"30%\"}\n![](images/grammar-of-graphics.png){fig-align=\"left\" width=\"300\"}\n:::\n:::\n\n## Layers\n\nWith ggplot2, you can create a wide variety of plots layer-by-layer:\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/gg-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n# Layer 1: Data {.section-break}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/gg-data-1.png){width=768}\n:::\n:::\n\n\n\n## Data\n\nFoundation of the plot that gives you the canvas on which you can \"paint\" your data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins)\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\n# Layer 2: Aesthetics {.section-break}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/gg-aesthetics-1.png){width=768}\n:::\n:::\n\n\n\n## Aesthetics\n\nCharacteristics of plotting characters that can be *mapped* to a specific variable in the data, e.g.:\n\n-   `color`\n-   `shape`\n-   `size`\n-   `alpha` (transparency)\n-   ...\n\n## Color\n\nThe `color` aesthetic mapped to `species`:\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Shape\n\nThe `shape` aesthetic mapped to `island`:\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = island\n    )\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Shape\n\nThe `color` and `shape` aesthetics mapped to `species`:\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6-7\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species\n    )\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Size\n\nThe `size` aesthetic mapped to `body_mass_g`:\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species,\n    size = body_mass_g\n    )\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Alpha\n\nThe `alpha` aesthetic mapped to `flipper_length_mm`:\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species,\n    size = body_mass_g,\n    alpha = flipper_length_mm\n    )\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Mapping vs. setting {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n### Mapping:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|5-6\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, y = bill_length_mm,\n    color = species,\n    size = body_mass_g\n    )\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/mapping-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n### Setting:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|8-9\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, y = bill_length_mm\n    )\n  ) + \n  geom_point(\n    color = \"red\",\n    size = 3\n  )\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/setting-1.png){width=672}\n:::\n:::\n\n\n:::\n:::\n\n## Mapping vs. setting\n\n::: columns\n::: {.column width=\"50%\"}\n### Mapping:\n\nDetermine the size, alpha, etc. of points based on the values of a variable in the data -- goes into `aes()`:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n### Setting:\n\nDetermine the size, alpha, etc. of points **not** based on the values of a variable in the data -- goes into `geom_*()`:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n:::\n:::\n\n# Layer 3: Geoms {.section-break}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/gg-geoms-1.png){width=768}\n:::\n:::\n\n\n\n## Geoms\n\nVisual representations of data points:\n\n-   Short for *geom*etric objects\n-   `geom_*()` functions are used to add geoms to a plot\n-   Each geom adds a layer to the plot\n\n## `geom_point()` {.nostretch}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, y = bill_length_mm)\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-17-1.png){width=576}\n:::\n:::\n\n\n\n## `geom_smooth()` {.nostretch}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  penguins,\n  aes(x = bill_depth_mm, y = bill_length_mm)\n  ) + \n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-18-1.png){width=576}\n:::\n:::\n\n\n\n. . .\n\n::: hand\nand many more soon...\n:::\n\n# Layer 4: Facets {.section-break}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/gg-facets-1.png){width=768}\n:::\n:::\n\n\n\n## Faceting - what and why {.nostretch}\n\n-   Smaller plots that each display different subsets of the data\n-   Also referred to as **small multiples**\n-   Useful for exploring conditional relationships and large data\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/facet-grid-1.png){width=576}\n:::\n:::\n\n\n\n## Faceting - how\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  penguins, \n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm)\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## Faceting - how\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n  penguins, \n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm)\n  ) + \n  geom_point() +\n  facet_grid(species ~ island)\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n## Faceting by two variables\n\n::: columns\n::: {.column width=\"50%\"}\n`species` on rows, `island` on columns:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(species ~ island)\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n`island` on rows, `species` on columns:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(island ~ species)\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n:::\n:::\n\n## Faceting by one variable\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species)\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-26-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n# Layer 5 and 6:<br>Statistics and Coordinates {.section-break}\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/gg-stats-coords-1.png){width=768}\n:::\n:::\n\n\n:::\n\n::: {.column .fragment width=\"20%\"}\n::: hand-white\nmore on these later...\n:::\n:::\n:::\n\n# Layer 7: Themes {.section-break}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/gg-themes-1.png){width=768}\n:::\n:::\n\n\n\n## Themes\n\nControl the non-data elements of the plot:\n\n-   Select from pre-defined themes with `theme_*()` functions\n-   Take control of individual theme elements in the `theme()` function\n\n## `theme_dark()` {.nostretch}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  theme_dark()\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-30-1.png){width=768}\n:::\n:::\n\n\n\n## `theme()` {.nostretch}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) + \n  geom_point() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](2-2-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-31-1.png){width=768}\n:::\n:::\n\n\n\n. . .\n\n::: hand\nand many more throughout the course...\n:::\n",
    "supporting": [
      "2-2-grammar-of-graphics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}