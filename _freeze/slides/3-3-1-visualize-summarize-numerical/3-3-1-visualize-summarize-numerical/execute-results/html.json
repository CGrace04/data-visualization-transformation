{
  "hash": "7a722788a837b3fe3e79344680534da4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing and summarizing numerical data\"\nformat: \n  revealjs:\n    auto-stretch: true\n---\n\n\n\n\n\n# Setup\n\n## Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(openintro) # for data\nlibrary(scales)    # for pretty axis labels\n```\n:::\n\n\n\n## Data: Lending Club\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans <- loans_full_schema |>\n  select(\n    loan_amount, interest_rate, term, grade, \n    state, annual_income, homeownership, debt_to_income\n  )\nglimpse(loans)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 10,000\nColumns: 8\n$ loan_amount    <int> 28000, 5000, 2000, 21600, 23000, 50…\n$ interest_rate  <dbl> 14.07, 12.61, 17.09, 6.72, 14.07, 6…\n$ term           <dbl> 60, 36, 36, 36, 36, 36, 60, 60, 36,…\n$ grade          <fct> C, C, D, A, C, A, C, B, C, A, C, B,…\n$ state          <fct> NJ, HI, WI, PA, CA, KY, MI, AZ, NV,…\n$ annual_income  <dbl> 90000, 40000, 40000, 30000, 35000, …\n$ homeownership  <fct> MORTGAGE, RENT, RENT, RENT, RENT, O…\n$ debt_to_income <dbl> 18.01, 5.04, 21.15, 10.16, 57.96, 6…\n```\n\n\n:::\n:::\n\n\n\n# Distribution of a numerical variable\n\n## Loan amount {.nostretch}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## Characteristics of a distribution\n\n::: incremental\n- **Shape:** Modality and skewness\n- **Center:** Generally mean or median depending on whether the distribution is symmetric or skewed, respectively\n- **Spread:** Generally standard deviation or inter-quartile range (IQR) depending on whether the distribution is symmetric or skewed, respectively\n- **Outliers:** Whether there are any, where they are located, and if feasible to identify, which observations\n:::\n\n## Shape {.nostretch}\n\nThe distribution of loan amounts in this sample is unimodal and right-skewed distribution.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n## Center {.nostretch}\n\nMedian loan amount in this sample is $14,500.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n## Spread {.nostretch}\n\nIn this sample, the middle 50% of the loan amounts are between $8,000 and $24,000.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## Outliers {.nostretch}\n\nThere are no clear outliers in the loan amounts in this sample.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-8-1.png){width=576}\n:::\n:::\n\n\n\n# Visualizing numerical data {.section-break}\n\n## Histogram {.nostretch}\n\n- Helpful for identifying shape (modality and skewness)\n- Requires a careful selection of binwidth\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-9-1.png){width=576}\n:::\n:::\n\n\n\n## Histograms and binwidth\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_loans <- ggplot(loans, aes(x = loan_amount))\n```\n:::\n\n\n\n<br>\n\n:::: {.columns}\n\n::: {.column width=\"33%\" .fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_loans +\n  geom_histogram(\n    binwidth = 1000\n  )\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-11-1.png){width=480}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"33%\" .fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_loans +\n  geom_histogram(\n    binwidth = 5000\n  )\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-12-1.png){width=480}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"33%\" .fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_loans +\n  geom_histogram(\n    binwidth = 20000\n  )\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-13-1.png){width=480}\n:::\n:::\n\n\n:::\n\n::::\n\n## Histogram customization\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|2|3-7|8|9\"}\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 5000) +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  ) +\n  scale_x_continuous(\n    labels = label_dollar()\n  ) +\n  scale_y_continuous(\n    labels = label_number(big.mark = \",\")\n  )\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-14-1.png){width=576}\n:::\n:::\n\n\n\n## Density plot {.nostretch}\n\n- Helpful for identifying shape (modality and skewness)\n- Smoothness can be `adjust`ed\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_loans+\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-15-1.png){width=480}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"35%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_loans +\n  geom_density(adjust = 2)\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-16-1.png){width=480}\n:::\n:::\n\n\n:::\n\n::::\n\n\n## Box plot {.nostretch}\n\n- Helpful for identifying min, max, 25th percentile, median (50th percentile), 75th percentile\n- Helpful for identifying shape (skewness, but not modality)\n- Makes outliers very clear (according to a strict definition of an outlier)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_loans +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-17-1.png){width=576}\n:::\n:::\n\n\n\n## Box plot and outliers {.nostretch}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-18-1.png){width=576}\n:::\n:::\n\n\n\n## Box plot customization\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|3-5|6-10|11-14\"}\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot() +\n  scale_x_continuous(\n    labels = label_percent()\n  ) +\n  labs(\n    x = \"Interest rate\", \n    y = NULL,\n    title = \"Interest rates of Lending Club loans\"\n  ) +\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](3-3-1-visualize-summarize-numerical_files/figure-revealjs/unnamed-chunk-19-1.png){width=576}\n:::\n:::\n\n\n\n# Summarizing numerical data\n\n## `summarize()`\n\n- `summarize()` returns for a summary statistic for all observations in the data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans |>\n  summarize(mean_loan_amt = mean(loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_loan_amt\n          <dbl>\n1        16362.\n```\n\n\n:::\n:::\n\n\n\n. . .\n\n- `summarize()` can be used to calculate multiple summary statistics as well:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans |>\n  summarize(\n    q25 = quantile(loan_amount, 0.25),\n    q75 = quantile(loan_amount, 0.75)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n    q25   q75\n  <dbl> <dbl>\n1  8000 24000\n```\n\n\n:::\n:::\n\n\n\n## Sloppy `summarize()` {.smaller}\n\n`summarize()` will work even if you don't name your summary statistic, or give it a non-informative/bad name, but I don't recommend it!\n\n:::: {.columns}\n\n::: {.column width=\"25%\" .fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\n# good\nloans |>\n  summarize(\n    mean_loan_amt = mean(loan_amount)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_loan_amt\n          <dbl>\n1        16362.\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"25%\" .fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\n# bad\nloans |>\n  summarize(\n    mean(loan_amount)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  `mean(loan_amount)`\n                <dbl>\n1              16362.\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"25%\" .fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\n# bad\nloans |>\n  summarize(\n    temp = mean(loan_amount)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n    temp\n   <dbl>\n1 16362.\n```\n\n\n:::\n:::\n\n\n:::\n\n::::\n",
    "supporting": [
      "3-3-1-visualize-summarize-numerical_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}