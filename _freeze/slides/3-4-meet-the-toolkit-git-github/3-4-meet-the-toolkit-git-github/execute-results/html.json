{
  "hash": "64a0f0448c6ee26f4a81432bd1b0bc55",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Meet the toolkit: Git and GitHub\"\nformat: revealjs\n---\n\n\n# Learning goals\n\n## By the end of the course, you will ...\n\n::: incremental\n-- understand the importance of version control\n\n-- understand how we use Git & GitHub for version control  \n\n-- authenticate and configure Git so that RStudio can communicate with GitHub\n\n-- understand how to use version control for your final course project\n:::\n\n# Version control \n\n## Versioning - done badly\n\n![](images/phd_comics_vc.gif){fig-align=\"center\"}\n\n## Versioning - done better\n\n![](images/lego-steps.png){fig-align=\"center\"}\n\n## Versioning - done even better\n\n### with human readable messages\n\n![](images/lego-steps-commit-messages.png){fig-align=\"center\"}\n\n# Toolkit: Version control and collaboration\n\n## Git and GitHub {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/git-logo.png){fig-alt=\"Git logo\" fig-align=\"center\" width=\"150\"}\n\n-   Git is a version control system -- like \"Track Changes\" features from Microsoft Word, on steroids\n-   It's not the only version control system, but it's a very popular one\n:::\n\n::: {.column width=\"50%\"}\n![](images/github-logo.png){fig-alt=\"GitHub logo\" fig-align=\"center\" width=\"150\"}\n\n-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better\n\n-   We will use GitHub as a platform for your course projects\n:::\n:::\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-01.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-02.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-03.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-04.png){fig-align=\"center\"}\n\n## Git and GitHub tips {.smaller}\n\nThere are many many git commands ... but there are a lot of them and very few people know them all. 99% of the time you will use git to push, commit, and pull\n\n![](images/pcp-git.png){fig-align=\"center\"}\n\n## Git and GitHub tips {.smaller}\n\n-   There are many many git commands ... but there are a lot of them and very few people know them all. 99% of the time you will use git to push, commit, and pull\n\n::: incremental\n-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line.\n-   If you are looking for additional resources for working with git and R, check out: There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). \n:::\n\n## Before we begin - create GitHub account\n\nGo to [Github](https://github.com/) and walk through the steps for creating an account.\n\nYouâ€™ll need to choose a user name. I recommend reviewing the user name advice [here](https://happygitwithr.com/github-acct#username-advice) before choosing a username.\n\n# Tour: Git + GitHub + Configuration\n\n\n\n## The project \n::: incremental\n**Introduction** - contains more information about your data set and the research question(s) you are tasked to investigate.  \n\n**Methods** - visualizations and summary statistics relevant to your research question(s). These should be accompanied with written descriptions.\n\n**Discussion** - written summary to discuss your overall findings, and describe the key results from your analysis.\n:::\n\n## Set up your SSH key \n\n-   Go back to your RStudio container and type `credentials::ssh_setup_github()` into your console.\n\n-   Open the browser when prompted, and paste your SSH key.\n\n## Configure Git \n\nTo do so, you will use the `use_git_config()` function from the usethis package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_git_config(\n  user.name = \"Elijah Meyer\", \n  user.email = \"elijahcoursera@gmail.com\"\n)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}