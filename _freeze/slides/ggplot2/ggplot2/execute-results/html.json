{
  "hash": "bbb29066c5890145bf9079433d1a7774",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualising data with ggplot2\"\nsubtitle: \"<br><br> Data Science with R\"\nauthor: \"Dr. Mine √áetinkaya-Rundel\"\nformat: \n  revealjs:\n    theme: ../slides.scss\n    highlight-style: a11y-dark\nexecute:\n  echo: true\n---\n\n\n\n\n# ggplot2 ‚ù§Ô∏è üêß\n\n## ggplot2 $\\in$ tidyverse\n\n::: columns\n::: {.column width=\"30%\"}\n![](images/ggplot2-part-of-tidyverse.png)\n:::\n\n::: {.column width=\"70%\"}\n::: incremental\n-   **ggplot2** is tidyverse's data visualization package\n-   Structure of the code for plots can be summarized as\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1|2|3|5|6\"}\nggplot(\n  data = [data], \n  mapping = aes(x = [x-variable], y = [y-variable])\n  ) +\n  geom_xxx() +\n  other options\n```\n:::\n\n:::\n:::\n\n## Data: Palmer Penguins\n\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex.\n\n::: columns\n::: {.column width=\"30%\"}\n![](images/penguins.png)\n:::\n\n::: {.column width=\"70%\"}\n::: small\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1-2|4\"}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n$ sex               <fct> male, female, female, NA, female, male, female, male‚Ä¶\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶\n```\n\n\n:::\n:::\n\n:::\n:::\n:::\n\n## Goal\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-4-1.png){width=100%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1|2|3|5|6-13\"}\nggplot(\n  data = penguins, \n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()\n```\n:::\n\n:::\n\n# Coding out loud\n\n## \n\n::: medium\n> **Start with the `penguins` data frame**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-7-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, **map bill depth to the x-axis**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm\n    )\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-9-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis **and map bill length to the y-axis.**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|5\"}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-11-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. **Represent each observation with a point**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|8\"}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-13-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point **and map species to the color of each point.**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-15-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. **Title the plot \"Bill depth and length\"**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(title = \"Bill depth and length\")\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-17-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot \"Bill depth and length\", **add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|8\"}\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point()  +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-19-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", **label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|9\"}\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point()  +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\"\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-21-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, **label the legend \"Species\"**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|10\"}\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n     x = \"Bill depth (mm)\", y = \"Bill length (mm)\", \n    color = \"Species\"\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-23-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", **and add a caption for the data source.**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|11\"}\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\", \n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-25-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: medium\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", and add a caption for the data source. **Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.**\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|13\"}\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\", \n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-27-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## \n\n::: panel-tabset\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = penguins, \n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()\n```\n:::\n\n\n### Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot2_files/figure-revealjs/unnamed-chunk-29-1.png){width=100%}\n:::\n:::\n\n\n### Narrative\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n\nRepresent each observation with a point and map species to the color of each point.\n\nTitle the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", and add a caption for the data source.\n\nFinally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n:::\n\n## Argument names\n\n::: callout-tip\nYou can omit the names of first two arguments when building plots with `ggplot()`.\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2-7\"}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2-7\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n:::\n\n:::\n:::\n",
    "supporting": [
      "ggplot2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}