---
title: "Bechdel + data visualization"
order: 2
webr:
  packages: ['tidyverse', 'scales']
---

::: {.callout-important}
Please reference the `webR-intro` programming exercise for information on the different types of code chunks, questions, and how to save your work to reference later.
:::

## Getting started

Please run the following code by clicking the [green arrow]{style="color:green;"} just above the code chunk. When reading in the data, nothing will appear after you click the button. However, clicking the arrow ensures that your data can be used for the following programming exercise.

```{webr-r}
#| context: setup
download.file(
  "https://raw.githubusercontent.com/ElijahMeyer3/Coursera/main/data/bechdel.csv",
  "bechdel.csv"
)
```

```{webr-r}
#| echo: false
bechdel <- read.csv("bechdel.csv")
```

```{r}
#| echo: false
bechdel <- read.csv("data/bechdel.csv") # put in R file to r chunks have data to use
```

In this mini analysis we work with the data used in the FiveThirtyEight story titled ["The Dollar-And-Cents Case Against Hollywood's Exclusion of Women"](https://fivethirtyeight.com/features/the-dollar-and-cents-case-against-hollywoods-exclusion-of-women/).

This analysis is about the [Bechdel test](https://en.wikipedia.org/wiki/Bechdel_test), a measure of the representation of women in fiction.

### Packages

We'll use: **tidyverse** for majority of the analysis and **scales** for pretty plot labels later on. These are ready to use for you in this programming exercise!

```{r}
#| label: load-packages
#| message: false
#| warning: false
library(tidyverse)
library(scales)
```

```{r}
#| echo: false

library(tidyverse) # put in r file to r chunks have packages to use
library(scales)

```


::: callout-note
This a modified version of the `bechdel` dataset. It's been modified to include some new variables derived from existing variables as well as to limit the scope of the data to movies released between 1990 and 2013. A link to the original dataset can be found [here](https://github.com/fivethirtyeight/data/blob/master/bechdel/movies.csv)
:::

### Get to know the data

We can use the `glimpse()` function to get an overview (or "glimpse") of the data. Write the following code below to accomplish this task.

With your output, confirm that:

- There are 1615 rows

- There are 7 variables (columns) in the dataset

::: callout-warning
If you receive the error [Error: object 'bechdel' not found]{style="color:red;"}, go back and read in your data above.
:::

```{webr-r}
# add code here

```

::: {.callout-tip collapse="true"}
## Solution

```{r}
glimpse(bechdel)
```

:::

We can use `slice()` to look at rows of our data. Run the following code. Change the `5` to another number to print that many rows!

```{webr-r}
slice(bechdel, 1:5)
```


```{=html}
<textarea rows="4" cols="50">
</textarea>
```
<br><br>

What does each observation (row) in the data set represent?

<label>Answer:</label> <br>

```{=html}
<textarea rows="4" cols="50">
</textarea>
```
<br><br>

::: {.callout-tip collapse="true"}
## Solution

Each observation represents a **movie**.
:::

## Variables of Interest

The variables we'll focus on are the following:

-   `budget_2013`: Budget in 2013 inflation adjusted dollars.
-   `gross_2013`: Gross (US and international combined) in 2013 inflation adjusted dollars.
-   `roi`: Return on investment, calculated as the ratio of the gross to budget.
-   `clean_test`: Bechdel test result:
    -   `ok` = passes test
    -   `dubious`
    -   `men` = women only talk about men
    -   `notalk` = women don't talk to each other
    -   `nowomen` = fewer than two women
-   `binary`: Bechdel Test PASS vs FAIL binary

We will also use the `year` of release in data prep and `title` of movie to take a deeper look at some outliers.

There are a few other variables in the dataset, but we won't be using them in this analysis.

## Visualizing data with `ggplot2`

**ggplot2** is the package and `ggplot()` is the function in this package that is used to create a plot. Interact with the code below by either running the code given, or adding code to achieve the expected solution when asked within the code chunk!

-   `ggplot()` creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with `data = bechdel`, and run the following to create our base.

```{webr-r}
#| label: plot-base
ggplot(data = bechdel)
```

-   The `mapping` argument is paired with an aesthetic (`aes()`), which tells us how the variables in our data set should be mapped to the visual properties of the graph.

```{webr-r}
#| label: plot-aesthetic-mapping
ggplot(data = bechdel, 
       mapping = aes(x = budget_2013, y = gross_2013))
```

-   As we previously mentioned, we often omit the names of the first two arguments in R functions. So you'll often see this written as:

```{webr-r}
#| label: plot-simplified-call
ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013))
```

Note that the result is exactly the same.

The `geom_xx()` function specifies the type of plot we want to use to represent the data. In the code below, we want to use `geom_point()`, which creates a plot where each observation is represented by a point.

```{webr-r}
#| label: plot-point
ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013)) +
  # type geom_point() here!
```

::: {.callout-tip collapse="true"}
## Solution

```{r}
#| echo: false
library(ggplot2)
ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013)) +
  geom_point()
```
:::

Note that this results in a warning as well.

This warning represents the number of observations that were removed because there were missing data!

## Gross revenue vs. budget

### Step 1

The following code changes the color of all points to coral. Explore different colors by changing "coral" to different colors!

::: callout-tip
See <http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf> for many color options you can use by name in R or use the [hex code](https://en.wikipedia.org/wiki/Web_colors) for a color of your choice.
:::

```{webr-r}
#| label: plot-point-color

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013)) +
  geom_point(color = "coral") 
```


```{=html}
<textarea rows="4" cols="50">
</textarea>
```
<br><br>

### Step 2

Add labels for the title and x and y axes using [labs()](https://ggplot2.tidyverse.org/reference/labs.html). Do this by modifying the existing code below.

```{webr-r}
#| label: plot-labs

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013)) +
  geom_point(color = "coral") + 
  # insert code here
```

::: {.callout-tip collapse="true"}
## Solution

```{r}
#| label: plot-labels

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013))+
  geom_point(color = "deepskyblue3") + 
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget"
    )
```
:::

### Step 3

An `aes`thetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:

-   color
-   fill
-   shape
-   size
-   alpha (transparency)

Modify the plot below, so the `color` of the points is based on the variable `binary`, and make the size of your points based on `roi`.

```{webr-r}
#| label: plot-aes-color

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013)) +
  geom_point() + 
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```

::: {.callout-tip collapse="true"}
## Solution

```{r}
#| label: plot-aes-color-solution

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013,
           color = binary, size = roi)) +
  geom_point() + 
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```
:::

### Step 4

`alpha` is used within `geom_point()` to change the transparency of the dots. alpha ranges between 0 and 1, with lower values equating to more transparent dots. Below, make the dots more transparent. 

```{webr-r}
#| label: plot-aes-alpha

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013,
           color = binary, size = roi)) +
  geom_point(alpha = 1) + 
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```


```{=html}
<textarea rows="4" cols="50">
</textarea>
```
<br><br>


### Step 5

Expand on your plot from the previous step by using `facet_wrap()` to display the association between budget and gross for different values of `clean_test`.

```{webr-r}
#| label: plot-facet-wrap

ggplot(bechdel, 
  aes(x = budget_2013, y = gross_2013,
    color = binary, size = roi)) +
  geom_point(alpha = 0.5) + 
  facet_wrap(~#insert variable here) +
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```

::: {.callout-tip collapse="true"}
## Solution

```{r}
#| label: plot-facet-wrap-sol

ggplot(bechdel, 
  aes(x = budget_2013, y = gross_2013,
    color = binary, size = roi)) +
  geom_point(alpha = 0.5) + 
  facet_wrap(~ clean_test) +
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```
:::

### Step 6

Below is a demonstration on how to improve your plot from the previous step by making the x and y scales more legible.

::: callout-tip
This is done through the use of the [**scales**](https://scales.r-lib.org/) package, specifically the `scale_x_continuous()` and `scale_y_continuous()` functions.
:::

```{webr-r}
#| label: plot-scales

ggplot(bechdel, 
  aes(x = budget_2013, y = gross_2013,
    color = binary, size = roi)) +
  geom_point(alpha = 0.5) + 
  facet_wrap(~clean_test) +
  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +
  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```


```{=html}
<textarea rows="4" cols="50">
</textarea>
```
<br><br>

### Step 7

Expand on your plot from the previous step by using `facet_grid()` to display the association between budget and gross for different combinations of `clean_test` and `binary`. Comment on whether this was a useful update.

```{webr-r}
#| label: plot-facet-grid

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013,
           color = binary, size = roi)) +
  geom_point(alpha = 0.5) + 
  facet_grid(#insert variable name1 ~ insert variable name2) +
  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +
  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```

Is this type of facet useful? Why or why not?

<label>Answer:</label> <br>

```{=html}
<textarea rows="4" cols="50">
</textarea>
```
<br><br>

::: {.callout-tip collapse="true"}
## Solution

```{r}

ggplot(bechdel, 
       aes(x = budget_2013, y = gross_2013,
           color = binary, size = roi)) +
  geom_point(alpha = 0.5) + 
  facet_grid(clean_test ~ binary) +
  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +
  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +
  labs(
    x = "Budget (in 2013 $)", 
    y = "Gross revenue (in 2013 $)", 
    title = "Gross revenue vs. budget, by Bechdel test result"
    )
```


This was not a useful update as one of the levels of `clean_test` maps directly to one of the levels of `binary`.
:::

