---
title: "Visualizing and summarizing numerical data"
format: 
  revealjs:
    auto-stretch: true
---

```{r}
#| include: false
ggplot2::theme_set(ggplot2::theme_gray(base_size = 16))
```

# Setup

## Packages

```{r}
#| label: packages
#| message: false
library(tidyverse) # for data wrangling and visualization
library(openintro) # for data
library(scales)    # for pretty axis labels
```

## Data: Lending Club

```{r}
loans <- loans_full_schema |>
  select(
    loan_amount, interest_rate, term, grade, 
    state, annual_income, homeownership, debt_to_income
  )
glimpse(loans)
```

# Distribution of a numerical variable

## Loan amount {.nostretch}

```{r}
#| echo: false
#| fig-width: 10
loan_amount_hist <- ggplot(loans, aes(x = loan_amount)) +
  geom_histogram(binwidth = 5000) +
  scale_x_continuous(labels = label_dollar()) +
  scale_y_continuous(labels = label_number(big.mark = ",")) +
  theme_gray(base_size = 26) +
  labs(
    x = "Loan amount (USD)",
    y = "Count"
  )
loan_amount_hist
```

## Characteristics of a distribution

::: incremental
- **Shape:** Modality and skewness
- **Center:** Generally mean or median depending on whether the distribution is symmetric or skewed, respectively
- **Spread:** Generally standard deviation or inter-quartile range (IQR) depending on whether the distribution is symmetric or skewed, respectively
- **Outliers:** Whether there are any, where they are located, and if feasible to identify, which observations
:::

## Shape {.nostretch}

The distribution of loan amounts in this sample is unimodal and right-skewed distribution.

```{r}
#| echo: false
#| fig-width: 9
ggplot(loans, aes(x = loan_amount)) +
  geom_histogram(binwidth = 5000, aes(y = after_stat(density))) +
  geom_density(adjust = 2, color = "pink", linewidth = 2) +
  theme_gray(base_size = 26) +
  scale_x_continuous(labels = label_dollar()) +
  labs(
    x = "Loan amount (USD)",
    y = NULL
  ) +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
```

## Center {.nostretch}

Median loan amount in this sample is $14,500.

```{r}
#| echo: false
#| fig-width: 9
loan_amount_hist +
  geom_vline(xintercept = median(loans$loan_amount), color = "pink", linewidth = 2) +
  labs(
    x = "Loan amount (USD)",
    y = NULL
  )
```

## Spread {.nostretch}

In this sample, the middle 50% of the loan amounts are between $8,000 and $24,000.

```{r}
#| echo: false
#| fig-width: 9

loan_amout_summary <- loans |>
  summarize(
    q25 = quantile(loan_amount, 0.25),
    q75 = quantile(loan_amount, 0.75)
  )

loan_amount_hist +
  annotate(
    "segment",
    x = loan_amout_summary$q25, xend = loan_amout_summary$q75,
    y = 500, yend = 500,
    color = "pink", linewidth = 2
  ) +
  annotate(
    "segment",
    x = loan_amout_summary$q25, xend = loan_amout_summary$q25,
    y = 450, yend = 550,
    color = "pink", linewidth = 2
  ) +
  annotate(
    "segment",
    x = loan_amout_summary$q75, xend = loan_amout_summary$q75,
    y = 450, yend = 550,
    color = "pink", linewidth = 2
  )

```

## Outliers {.nostretch}

There are no clear outliers in the loan amounts in this sample.

```{r}
#| echo: false
#| fig-width: 9

ggplot(loans, aes(x = loan_amount)) +
  geom_boxplot()
```

# Visualizing numerical data {.section-break}

## Histogram {.nostretch}

- Helpful for identifying shape (modality and skewness)
- Requires a careful selection of binwidth

```{r}
ggplot(loans, aes(x = loan_amount)) +
  geom_histogram()
```

## Histograms and binwidth

```{r}
p_loans <- ggplot(loans, aes(x = loan_amount))
```

<br>

:::: {.columns}

::: {.column width="33%" .fragment}
```{r}
#| fig-width: 5
p_loans +
  geom_histogram(
    binwidth = 1000
  )
```
:::

::: {.column width="33%" .fragment}
```{r}
#| fig-width: 5
p_loans +
  geom_histogram(
    binwidth = 5000
  )
```
:::

::: {.column width="33%" .fragment}
```{r}
#| fig-width: 5
p_loans +
  geom_histogram(
    binwidth = 20000
  )
```
:::

::::

## Histogram customization {.smaller}

```{r}
#| output-location: column
#| code-line-numbers: "|2|3-7|8-10|11-13"
ggplot(loans, aes(x = loan_amount)) +
  geom_histogram(binwidth = 5000) +
  labs(
    x = "Loan amount ($)",
    y = "Frequency",
    title = "Amounts of Lending Club loans"
  ) +
  scale_x_continuous(
    labels = label_dollar()
  ) +
  scale_y_continuous(
    labels = label_number(big.mark = ",")
  )
```

## Density plot {.nostretch}

- Helpful for identifying shape (modality and skewness)
- Smoothness can be `adjust`ed

:::: {.columns}

::: {.column width="35%"}
```{r}
#| fig-width: 5
p_loans+
  geom_density()
```
:::

::: {.column width="35%"}
```{r}
#| fig-width: 5
p_loans +
  geom_density(adjust = 2)
```
:::

::::


## Box plot {.nostretch}

- Helpful for identifying min, max, 25th percentile, median (50th percentile), 75th percentile
- Helpful for identifying shape (skewness, but not modality)
- Makes outliers very clear (according to a strict definition of an outlier)

```{r}
p_loans +
  geom_boxplot()
```

## Box plot and outliers {.nostretch}

```{r}
ggplot(loans, aes(x = interest_rate)) +
  geom_boxplot()
```

## Box plot customization  {.smaller}

```{r}
#| output-location: column
#| code-line-numbers: "|3-7|8-11"
ggplot(loans, aes(x = interest_rate)) +
  geom_boxplot() +
  labs(
    x = "Interest rate", 
    y = NULL,
    title = "Interest rates of Lending Club loans"
  ) +
  theme(
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank()
  )
```

# Summarizing numerical data

## `summarize()` {.smaller}

- `summarize()` returns for a summary statistic for all observations in the data:

```{r}
loans |>
  summarize(mean_loan_amt = mean(loan_amount))
```

. . .

- `summarize()` can be used to calculate multiple summary statistics as well:

```{r}
loans |>
  summarize(
    q25 = quantile(loan_amount, 0.25),
    q75 = quantile(loan_amount, 0.75)
  )
```

## Sloppy `summarize()` {.smaller}

`summarize()` will work even if you don't name your summary statistic, or give it a non-informative/bad name, but I don't recommend it!

:::: {.columns}

::: {.column width="25%" .fragment}
```{r}
#| code-line-numbers: "4"
#| fig-width: 5
# good
loans |>
  summarize(
    mean_loan_amt = mean(loan_amount)
  )
```
:::

::: {.column width="25%" .fragment}
```{r}
#| code-line-numbers: "4"
#| fig-width: 5
# bad
loans |>
  summarize(
    mean(loan_amount)
  )
```
:::

::: {.column width="25%" .fragment}
```{r}
#| code-line-numbers: "4"
#| fig-width: 5
# bad
loans |>
  summarize(
    temp = mean(loan_amount)
  )
```
:::

::::
