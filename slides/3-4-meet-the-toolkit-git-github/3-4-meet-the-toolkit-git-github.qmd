---
title: "Meet the toolkit: Git and GitHub"
format: revealjs
---

# Learning goals

## By the end of the course, you will ...

::: incremental
-- understand the importance of version control

-- understand how we use Git & GitHub for version control  

-- authenticate and configure Git so that RStudio can communicate with GitHub

-- understand how to use version control for your final course project
:::

# Version control 

## Versioning - done badly

![](images/phd_comics_vc.gif){fig-align="center"}

## Versioning - done better

![](images/lego-steps.png){fig-align="center"}

## Versioning - done even better

### with human readable messages

![](images/lego-steps-commit-messages.png){fig-align="center"}


## Git and GitHub {.smaller}

::: columns
::: {.column width="50%"}
![](images/git-logo.png){fig-alt="Git logo" fig-align="center" width="150"}

-   It's not the only version control system, but it's a very popular one

-   Git is a version control system -- like "Track Changes" features from Microsoft Word, on steroids

:::

::: {.column width="50%"}
![](images/github-logo.png){fig-alt="GitHub logo" fig-align="center" width="150"}

-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better

-   We will use GitHub as a platform for your course projects

:::
:::

##  {.center}

[Let's take a tour of]{.hand-blue-large}


![](images/tech.png){fig-align="center"}


## Git and GitHub tips {.smaller}

There are many many git commands ... but there are a lot of them and very few people know them all. 99% of the time you will use git to push, commit, and pull

![](images/pcp-git.png){fig-align="center"}

## Accessing your project

![](images/whole-game-01.png){fig-align="center"}

## Accessing your project

![](images/whole-game-02.png){fig-align="center"}

## Accessing your project

![](images/whole-game-03.png){fig-align="center"}

## Accessing your project

![](images/whole-game-04.png){fig-align="center"}


## Git and GitHub tips {.smaller}

-   There are many many git commands ... but there are a lot of them and very few people know them all. 99% of the time you will use git to push, commit, and pull

-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line.

::: incremental
-   If you are looking for additional resources for working with git and R, check out: There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). 
:::

## Before we begin our tour 

How to create GitHub account

-   Go to [Github](https://github.com/) and walk through the steps for creating an account.

-   Youâ€™ll need to choose a user name. I recommend reviewing the user name advice [here](https://happygitwithr.com/github-acct#username-advice) before choosing a username.

# Tour: Git + GitHub + Configuration

# Project instructions 

## The project 
::: incremental
**Introduction** - contains information about your data set and the research question(s) you are tasked to investigate  

**Methods** - should include visualizations and summary statistics relevant to your research question(s). These should be accompanied with written descriptions

**Discussion** - should include a written summary discussing your overall findings, and describes the key results from your analysis
:::


