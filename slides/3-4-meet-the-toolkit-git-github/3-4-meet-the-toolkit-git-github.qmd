---
title: "Meet the toolkit: Git and GitHub"
format: revealjs
---

# Learning goals

## By the end of the course, you will ...

::: incremental
-- understand what is and the importance of version control

-- understand how we use Git & GitHub for version control  

-- authenticate and configure Git so that RStudio can communicate with GitHub

-- understand how to use version control for your final course project
:::

## Version control 

-   keeping software system that has the potential for many versions tracked and well organized 

-   allows you to see what changes you and others are making

## Versioning - done badly

![](images/phd_comics_vc.gif){fig-align="center"}

## Versioning - done better

![](images/lego-steps.png){fig-align="center"}

## Versioning - done even better

### with human readable messages

![](images/lego-steps-commit-messages.png){fig-align="center"}

# Toolkit: Version control and collaboration

## Git and GitHub {.smaller}

::: columns
::: {.column width="50%"}
![](images/git-logo.png){fig-alt="Git logo" fig-align="center" width="150"}

-   Git is a version control system -- like "Track Changes" features from Microsoft Word, on steroids
-   It's not the only version control system, but it's a very popular one
:::

::: {.column width="50%"}
![](images/github-logo.png){fig-alt="GitHub logo" fig-align="center" width="150"}

-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better

-   We will use GitHub as a platform for web hosting and collaboration (and as our course management system!)
:::
:::

## How will we use Git and GitHub?

![](images/whole-game-01.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-02.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-03.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-04.png){fig-align="center"}

## Git and GitHub tips {.smaller}

-   There are many many git commands -- but there are a lot of them -- and very few people know them all. 99% of the time you will use git to push, commit, and pull.

![](images/pcp-git.png){fig-align="center"}

## Git and GitHub tips {.smaller}

-   There are many many git commands -- but there are a lot of them -- and very few people know them all. 99% of the time you will use git to push, commit, and pull.

::: incremental
-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line.
-   There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). Some of the content in there is beyond the scope of this course, but it's a good place to look for help.
:::

## Tour: Git + GitHub

## The project 
::: incremental
**Introduction** - contains more information about your data set and the research question(s) you are tasked to investigate.  

**Methods** - visualizations and summary statistics relevant to your research question(s). These should be accompanied with written descriptions.

**Discussion** - written summary to discuss your overall findings, and describe the key results from your analysis.
:::

## Create a GitHub account 

Go to [Github](https://github.com/) and walk through the steps for creating an account.

Youâ€™ll need to choose a user name. I recommend reviewing the user name advice [here](https://happygitwithr.com/github-acct#username-advice) before choosing a username.

## Set up your SSH key 

-   Go back to your RStudio container and type `credentials::ssh_setup_github()` into your console.

-   Open the browser when prompted, and paste your SSH key.

## Configure Git 

To do so, you will use the `use_git_config()` function from the usethis package.

```{r}
#| eval: false

usethis::use_git_config(
  user.name = "Elijah Meyer", 
  user.email = "elijahcoursera@gmail.com"
)
```

